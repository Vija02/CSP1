#BlueJ class context
comment0.params=
comment0.target=Picture()
comment0.text=\r\n\ Constructor\ that\ creates\ an\ empty\ picture\r\n
comment1.params=fileName
comment1.target=Picture(java.lang.String)
comment1.text=\r\n\ Constructor\ that\ creates\ a\ picture\ from\ the\ passed\ file\ name\r\n\ @param\ fileName\r\n
comment10.params=
comment10.target=int\ getWidth()
comment10.text=\r\n\ Method\ to\ return\ the\ width\ of\ the\ picture\r\n\ @return\ the\ width\ in\ pixels\r\n
comment11.params=
comment11.target=int\ getHeight()
comment11.text=\r\n\ Method\ to\ return\ the\ height\ of\ the\ picture\r\n\ @return\ the\ height\ in\ pixels\r\n
comment12.params=fileName
comment12.target=void\ write(java.lang.String)
comment12.text=\r\n\ Method\ to\ write\ the\ picture\ to\ a\ file\r\n
comment13.params=
comment13.target=void\ act()
comment13.text=\r\n\ This\ method\ is\ called\ by\ the\ Greenfoot\ framework.\ You\ may\ want\ to\ override\ it\ \r\n\ to\ automatically\ load\ a\ picture\ and\ carry\ out\ manipulations\ when\ the\ user\ clicks\r\n\ on\ the\ act\ button\ in\ Greenfoot.\r\n
comment2.params=x\ y
comment2.target=Pixel\ getPixel(int,\ int)
comment2.text=\r\n\ Gets\ a\ pixel\ for\ the\ given\ x\ and\ y\ location\r\n\ @param\ x\ the\ x\ location\ of\ the\ pixel\ in\ the\ picture\r\n\ @param\ y\ the\ y\ location\ of\ the\ pixel\ in\ the\ picture\r\n\ @return\ a\ Pixel\ object\ for\ the\ given\ location\r\n
comment3.params=
comment3.target=Pixel[]\ getPixels()
comment3.text=\r\n\ Gets\ all\ pixels\ in\ this\ picture\r\n\ @return\ a\ one-dimensional\ array\ of\ Pixel\ objects,\ traversed\ in\r\n\ row-major\ order.\r\n
comment4.params=
comment4.target=Pixel[][]\ get2DPixels()
comment4.text=\ \r\n\ Gets\ all\ the\ pixels\ in\ the\ picture\ and\ returns\r\n\ them\ in\ a\ two\ dimensional\ array\ in\ column-major\ order\r\n\ @return\ the\ two\ dimensional\ array\ of\ pixels\ in\ column-\r\n\ major\ order\ (ie\ [col][row].\r\n
comment5.params=
comment5.target=Pixel[][]\ get2DPixelsRowMajor()
comment5.text=\ \r\n\ Gets\ all\ the\ pixels\ in\ the\ picture\ and\ returns\r\n\ them\ in\ a\ two\ dimensional\ array\ in\ row-major\ order\r\n\ @return\ the\ two\ dimensional\ array\ of\ pixels\ in\ row-\r\n\ major\ order\ (ie\ [row][col]).\r\n
comment6.params=source
comment6.target=void\ load(java.lang.String)
comment6.text=\r\n\ Loads\ a\ picture\ from\ a\ given\ source.\ \r\n\ @param\ source\ the\ image\ source.\ If\ the\ source\ starts\r\n\ with\ http\://,\ it\ is\ a\ URL,\ otherwise,\ a\ filename.\r\n
comment7.params=
comment7.target=void\ reload()
comment7.text=\r\n\ Reloads\ this\ picture,\ undoing\ any\ manipulations.\r\n
comment8.params=
comment8.target=void\ pick()
comment8.text=\r\n\ Displays\ a\ file\ chooser\ for\ picking\ a\ picture.\r\n
comment9.params=
comment9.target=void\ repaint()
comment9.text=\r\n\ This\ method\ is\ called\ by\ the\ Greenfoot\ framework.\r\n
numComments=14
